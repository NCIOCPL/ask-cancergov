"use strict";
/*
 * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.GameStrings = void 0;
var GameStrings;
(function (GameStrings) {
    let SlotType;
    (function (SlotType) {
        SlotType["DomainValue"] = "DomainValue";
    })(SlotType = GameStrings.SlotType || (GameStrings.SlotType = {}));
    let Target;
    (function (Target) {
        Target["Name"] = "name";
        Target["AvatarName"] = "avatarName";
        Target["PetName"] = "petName";
        Target["Age"] = "age";
        Target["CharClass"] = "class";
        Target["Species"] = "species";
    })(Target = GameStrings.Target || (GameStrings.Target = {}));
    let ID;
    (function (ID) {
        ID["GameContainer"] = "gameContainer";
        ID["PlayerContainer"] = "playerContainer";
        ID["PlayerName"] = "playerName";
        ID["PlayerAge"] = "playerAge";
        ID["PlayerClass"] = "playerClass";
        ID["PetContainer"] = "petContainer";
        ID["PetName"] = "petName";
        ID["PetSpecies"] = "petSpecies";
    })(ID = GameStrings.ID || (GameStrings.ID = {}));
    let Value;
    (function (Value) {
        Value["Elf"] = "elf";
        Value["Dwarf"] = "dwarf";
        Value["Human"] = "human";
        Value["Cat"] = "cat";
        Value["Dog"] = "dog";
    })(Value = GameStrings.Value || (GameStrings.Value = {}));
})(GameStrings = exports.GameStrings || (exports.GameStrings = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FtZV9zdHJpbmdzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vdGVzdC9nYW1lX3N0cmluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7OztHQVdHOzs7QUFFSCxJQUFpQixXQUFXLENBb0MzQjtBQXBDRCxXQUFpQixXQUFXO0lBRXhCLElBQVksUUFFWDtJQUZELFdBQVksUUFBUTtRQUNoQix1Q0FBMkIsQ0FBQTtJQUMvQixDQUFDLEVBRlcsUUFBUSxHQUFSLG9CQUFRLEtBQVIsb0JBQVEsUUFFbkI7SUFFRCxJQUFZLE1BT1g7SUFQRCxXQUFZLE1BQU07UUFDZCx1QkFBYSxDQUFBO1FBQ2IsbUNBQXlCLENBQUE7UUFDekIsNkJBQW1CLENBQUE7UUFDbkIscUJBQVcsQ0FBQTtRQUNYLDZCQUFtQixDQUFBO1FBQ25CLDZCQUFtQixDQUFBO0lBQ3ZCLENBQUMsRUFQVyxNQUFNLEdBQU4sa0JBQU0sS0FBTixrQkFBTSxRQU9qQjtJQUVELElBQVksRUFZWDtJQVpELFdBQVksRUFBRTtRQUVWLHFDQUErQixDQUFBO1FBRS9CLHlDQUFtQyxDQUFBO1FBQ25DLCtCQUF5QixDQUFBO1FBQ3pCLDZCQUF1QixDQUFBO1FBQ3ZCLGlDQUEyQixDQUFBO1FBRTNCLG1DQUE2QixDQUFBO1FBQzdCLHlCQUFtQixDQUFBO1FBQ25CLCtCQUF5QixDQUFBO0lBQzdCLENBQUMsRUFaVyxFQUFFLEdBQUYsY0FBRSxLQUFGLGNBQUUsUUFZYjtJQUVELElBQVksS0FNWDtJQU5ELFdBQVksS0FBSztRQUNiLG9CQUFXLENBQUE7UUFDWCx3QkFBZSxDQUFBO1FBQ2Ysd0JBQWUsQ0FBQTtRQUNmLG9CQUFXLENBQUE7UUFDWCxvQkFBVyxDQUFBO0lBQ2YsQ0FBQyxFQU5XLEtBQUssR0FBTCxpQkFBSyxLQUFMLGlCQUFLLFFBTWhCO0FBQ0wsQ0FBQyxFQXBDZ0IsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFvQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDIwIEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpLlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogQSBjb3B5IG9mIHRoZSBMaWNlbnNlIGlzIGxvY2F0ZWQgYXRcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogb3IgaW4gdGhlIFwibGljZW5zZVwiIGZpbGUgYWNjb21wYW55aW5nIHRoaXMgZmlsZS4gVGhpcyBmaWxlIGlzIGRpc3RyaWJ1dGVkXG4gKiBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXJcbiAqIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nXG4gKiBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuZXhwb3J0IG5hbWVzcGFjZSBHYW1lU3RyaW5ncyB7XG5cbiAgICBleHBvcnQgZW51bSBTbG90VHlwZSB7XG4gICAgICAgIERvbWFpblZhbHVlID0gXCJEb21haW5WYWx1ZVwiXG4gICAgfVxuXG4gICAgZXhwb3J0IGVudW0gVGFyZ2V0IHtcbiAgICAgICAgTmFtZSA9IFwibmFtZVwiLFxuICAgICAgICBBdmF0YXJOYW1lID0gXCJhdmF0YXJOYW1lXCIsXG4gICAgICAgIFBldE5hbWUgPSBcInBldE5hbWVcIixcbiAgICAgICAgQWdlID0gXCJhZ2VcIixcbiAgICAgICAgQ2hhckNsYXNzID0gXCJjbGFzc1wiLFxuICAgICAgICBTcGVjaWVzID0gXCJzcGVjaWVzXCIsXG4gICAgfVxuXG4gICAgZXhwb3J0IGVudW0gSUQge1xuXG4gICAgICAgIEdhbWVDb250YWluZXIgPSBcImdhbWVDb250YWluZXJcIixcblxuICAgICAgICBQbGF5ZXJDb250YWluZXIgPSBcInBsYXllckNvbnRhaW5lclwiLFxuICAgICAgICBQbGF5ZXJOYW1lID0gXCJwbGF5ZXJOYW1lXCIsXG4gICAgICAgIFBsYXllckFnZSA9IFwicGxheWVyQWdlXCIsXG4gICAgICAgIFBsYXllckNsYXNzID0gXCJwbGF5ZXJDbGFzc1wiLFxuXG4gICAgICAgIFBldENvbnRhaW5lciA9IFwicGV0Q29udGFpbmVyXCIsXG4gICAgICAgIFBldE5hbWUgPSBcInBldE5hbWVcIixcbiAgICAgICAgUGV0U3BlY2llcyA9IFwicGV0U3BlY2llc1wiLFxuICAgIH1cblxuICAgIGV4cG9ydCBlbnVtIFZhbHVlIHtcbiAgICAgICAgRWxmID0gXCJlbGZcIixcbiAgICAgICAgRHdhcmYgPSBcImR3YXJmXCIsXG4gICAgICAgIEh1bWFuID0gXCJodW1hblwiLFxuICAgICAgICBDYXQgPSBcImNhdFwiLFxuICAgICAgICBEb2cgPSBcImRvZ1wiLFxuICAgIH1cbn0iXX0=