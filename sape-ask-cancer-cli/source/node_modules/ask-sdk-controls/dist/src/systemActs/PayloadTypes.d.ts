/**
 * Payload for ValueSetAct
 */
export interface ValueSetPayload<T> {
    /**
     * The control value.
     */
    value: T;
}
/**
 * Payload for ValueChangedAct
 */
export interface ValueChangedPayload<T> {
    value: T;
    /**
     * The previous control value.
     */
    previousValue: T;
}
/**
 *
 */
export interface InvalidValuePayload<T> {
    value: T;
    reasonCode?: string;
    renderedReason?: string;
}
export interface ProblematicInputValuePayload<T> {
    value: T;
    reasonCode: string;
    renderedReason?: string;
}
export interface RequestValuePayload {
    renderedTarget?: string;
}
export interface RequestChangedValuePayload {
    currentValue: string;
    renderedTarget?: string;
}
export interface RequestValueByListPayload {
    choicesFromActivePage: string[];
    allChoices: string[];
    renderedTarget?: string;
    renderedChoices?: string;
}
export interface RequestChangedValueByListPayload {
    currentValue: string;
    choicesFromActivePage: string[];
    allChoices: string[];
    renderedTarget?: string;
    renderedChoices?: string;
}
export interface LiteralContentPayload {
    promptFragment: string;
    repromptFragment?: string;
}
//# sourceMappingURL=PayloadTypes.d.ts.map