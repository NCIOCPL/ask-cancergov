"use strict";
/*
 * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Strings = void 0;
/**
 * The strings associated with various built-ins
 */
var Strings;
(function (Strings) {
    /**
     * Built-in feedback slot values
     */
    let Feedback;
    (function (Feedback) {
        Feedback["Affirm"] = "builtin_affirm";
        Feedback["Disaffirm"] = "builtin_disaffirm";
    })(Feedback = Strings.Feedback || (Strings.Feedback = {}));
    /**
     * Built-in action slot values
     */
    let Action;
    (function (Action) {
        Action["Set"] = "builtin_set";
        Action["Change"] = "builtin_change";
        Action["Select"] = "builtin_select";
        Action["None"] = "builtin_none";
    })(Action = Strings.Action || (Strings.Action = {}));
    /**
     * Built-in target slot values
     */
    let Target;
    (function (Target) {
        Target["It"] = "builtin_it";
        Target["Date"] = "builtin_date";
        Target["StartDate"] = "builtin_start_date";
        Target["EndDate"] = "builtin_end_date";
        Target["DateRange"] = "builtin_date_range";
        Target["Choice"] = "builtin_choice";
        // eslint-disable-next-line id-blacklist
        Target["Number"] = "builtin_number";
    })(Target = Strings.Target || (Strings.Target = {}));
    Strings.Conjunction = 'builtin_conjunction';
    Strings.Tail = 'builtin_tail';
    Strings.Head = 'builtin_head';
    Strings.Preposition = 'builtin_preposition';
})(Strings = exports.Strings || (exports.Strings = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RyaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb25zdGFudHMvU3RyaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7O0dBV0c7OztBQUVIOztHQUVHO0FBQ0gsSUFBaUIsT0FBTyxDQXVDdkI7QUF2Q0QsV0FBaUIsT0FBTztJQUVwQjs7T0FFRztJQUNILElBQVksUUFHWDtJQUhELFdBQVksUUFBUTtRQUNoQixxQ0FBeUIsQ0FBQTtRQUN6QiwyQ0FBK0IsQ0FBQTtJQUNuQyxDQUFDLEVBSFcsUUFBUSxHQUFSLGdCQUFRLEtBQVIsZ0JBQVEsUUFHbkI7SUFFRDs7T0FFRztJQUNILElBQVksTUFLWDtJQUxELFdBQVksTUFBTTtRQUNkLDZCQUFtQixDQUFBO1FBQ25CLG1DQUF5QixDQUFBO1FBQ3pCLG1DQUF5QixDQUFBO1FBQ3pCLCtCQUFxQixDQUFBO0lBQ3pCLENBQUMsRUFMVyxNQUFNLEdBQU4sY0FBTSxLQUFOLGNBQU0sUUFLakI7SUFFRDs7T0FFRztJQUNILElBQVksTUFTWDtJQVRELFdBQVksTUFBTTtRQUNkLDJCQUFpQixDQUFBO1FBQ2pCLCtCQUFxQixDQUFBO1FBQ3JCLDBDQUFnQyxDQUFBO1FBQ2hDLHNDQUE0QixDQUFBO1FBQzVCLDBDQUFnQyxDQUFBO1FBQ2hDLG1DQUF5QixDQUFBO1FBQ3pCLHdDQUF3QztRQUN4QyxtQ0FBeUIsQ0FBQTtJQUM3QixDQUFDLEVBVFcsTUFBTSxHQUFOLGNBQU0sS0FBTixjQUFNLFFBU2pCO0lBRVksbUJBQVcsR0FBRyxxQkFBcUIsQ0FBQztJQUNwQyxZQUFJLEdBQUcsY0FBYyxDQUFDO0lBQ3RCLFlBQUksR0FBRyxjQUFjLENBQUM7SUFDdEIsbUJBQVcsR0FBRyxxQkFBcUIsQ0FBQztBQUVyRCxDQUFDLEVBdkNnQixPQUFPLEdBQVAsZUFBTyxLQUFQLGVBQU8sUUF1Q3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDIwIEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpLlxuICogWW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogQSBjb3B5IG9mIHRoZSBMaWNlbnNlIGlzIGxvY2F0ZWQgYXRcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogb3IgaW4gdGhlIFwibGljZW5zZVwiIGZpbGUgYWNjb21wYW55aW5nIHRoaXMgZmlsZS4gVGhpcyBmaWxlIGlzIGRpc3RyaWJ1dGVkXG4gKiBvbiBhbiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXJcbiAqIGV4cHJlc3Mgb3IgaW1wbGllZC4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nXG4gKiBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqXG4gKiBUaGUgc3RyaW5ncyBhc3NvY2lhdGVkIHdpdGggdmFyaW91cyBidWlsdC1pbnNcbiAqL1xuZXhwb3J0IG5hbWVzcGFjZSBTdHJpbmdzIHtcblxuICAgIC8qKlxuICAgICAqIEJ1aWx0LWluIGZlZWRiYWNrIHNsb3QgdmFsdWVzXG4gICAgICovXG4gICAgZXhwb3J0IGVudW0gRmVlZGJhY2sge1xuICAgICAgICBBZmZpcm0gPSBcImJ1aWx0aW5fYWZmaXJtXCIsXG4gICAgICAgIERpc2FmZmlybSA9IFwiYnVpbHRpbl9kaXNhZmZpcm1cIixcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBCdWlsdC1pbiBhY3Rpb24gc2xvdCB2YWx1ZXNcbiAgICAgKi9cbiAgICBleHBvcnQgZW51bSBBY3Rpb24ge1xuICAgICAgICBTZXQgPSAnYnVpbHRpbl9zZXQnLFxuICAgICAgICBDaGFuZ2UgPSAnYnVpbHRpbl9jaGFuZ2UnLFxuICAgICAgICBTZWxlY3QgPSAnYnVpbHRpbl9zZWxlY3QnLFxuICAgICAgICBOb25lID0gXCJidWlsdGluX25vbmVcIlxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEJ1aWx0LWluIHRhcmdldCBzbG90IHZhbHVlc1xuICAgICAqL1xuICAgIGV4cG9ydCBlbnVtIFRhcmdldCB7XG4gICAgICAgIEl0ID0gJ2J1aWx0aW5faXQnLFxuICAgICAgICBEYXRlID0gJ2J1aWx0aW5fZGF0ZScsXG4gICAgICAgIFN0YXJ0RGF0ZSA9ICdidWlsdGluX3N0YXJ0X2RhdGUnLFxuICAgICAgICBFbmREYXRlID0gJ2J1aWx0aW5fZW5kX2RhdGUnLFxuICAgICAgICBEYXRlUmFuZ2UgPSAnYnVpbHRpbl9kYXRlX3JhbmdlJyxcbiAgICAgICAgQ2hvaWNlID0gJ2J1aWx0aW5fY2hvaWNlJyxcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGlkLWJsYWNrbGlzdFxuICAgICAgICBOdW1iZXIgPSAnYnVpbHRpbl9udW1iZXInLFxuICAgIH1cblxuICAgIGV4cG9ydCBjb25zdCBDb25qdW5jdGlvbiA9ICdidWlsdGluX2Nvbmp1bmN0aW9uJztcbiAgICBleHBvcnQgY29uc3QgVGFpbCA9ICdidWlsdGluX3RhaWwnO1xuICAgIGV4cG9ydCBjb25zdCBIZWFkID0gJ2J1aWx0aW5faGVhZCc7XG4gICAgZXhwb3J0IGNvbnN0IFByZXBvc2l0aW9uID0gJ2J1aWx0aW5fcHJlcG9zaXRpb24nO1xuXG59XG4iXX0=