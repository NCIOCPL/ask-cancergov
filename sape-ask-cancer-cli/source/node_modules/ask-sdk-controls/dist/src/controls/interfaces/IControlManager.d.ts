import { ResponseBuilder } from 'ask-sdk-core';
import { IControlResult } from './IControlResult';
import { IControl } from './IControl';
import { IControlInput } from './IControlInput';
/**
 * Manages a skill built with Controls.
 *
 * This is the minimal definition required by the Runtime (ControlHandler)
 * See `ControlManager` for the actual class used by implementations.
 */
export interface IControlManager {
    /**
     * Creates the tree of controls to handle state management and dialog
     * decisions for the skill.
     *
     * Usage:
     * - A single control is legal and will suffice for small skills. For larger
     *   skills a tree of controls structured using @see ContainerControl will
     *   help manage skill complexity.
     *
     * - In advanced scenarios with dynamic control tree shapes, this method is
     *   expected to produce a tree that is identical to the tree at the end of
     *   the previous turn.  The serializable control state can be inspected as
     *   necessary.
     *
     * @param serializableState - Map of control state objects keyed by
     *                          `controlId` This is provided for advanced cases
     *                          in which the tree has a dynamic shape based on
     *                          the application state.
     * @returns A Control that is either a single @see Control or a @see
     * ContainerControl that is the root of a tree.
     */
    createControlTree(serializableState: {
        [key: string]: any;
    }): IControl;
    /**
     * Builds the response.
     *
     * @param result - The result to be rendered
     * @param input - Input
     * @param responseBuilder - Response builder
     */
    render(result: IControlResult, input: IControlInput, responseBuilder: ResponseBuilder): void | Promise<void>;
    /**
     * Custom handling of a internal error before the skill exits and closes the
     * user session.
     */
    handleInternalError?(input: IControlInput, error: any, responseBuilder: ResponseBuilder): void;
}
//# sourceMappingURL=IControlManager.d.ts.map