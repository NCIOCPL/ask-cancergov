import { v1 } from 'ask-smapi-model';
import { ControlManager } from '../controls/ControlManager';
import { BaseControlIntent } from '../intents/BaseControlIntent';
import { InteractionModelGenerator } from './InteractionModelGenerator';
import { ModelData } from './ModelTypes';
import InteractionModelData = v1.skill.interactionModel.InteractionModelData;
/**
 * Interaction model generator for skills that use the Controls Framework
 *
 * This class extends `InteractionModelGenerator` with Controls-specific functionality.
 */
export declare class ControlInteractionModelGenerator extends InteractionModelGenerator {
    targetSlotIds: Set<string>;
    /**
     * Update the interaction model for a controlManager
     *
     * Behavior:
     * - Calls `controlManager.buildInteractionModel` to update the IM And add
     *   dummy dialogModel if SimpleControlIntent is used in control
     *
     * Usage: If the ControlManager is lacking data for the chosen locale, the
     * appropriate data should be add by user themselves User would need to
     * update the ModelDataMap instance and provide it to ControlManager's
     * constructor
     * @param controlManager - Control manager
     */
    buildCoreModelForControls(controlManager: ControlManager): ControlInteractionModelGenerator;
    build(): InteractionModelData;
    /**
     * Add AMAZON.YesIntent and AMAZON.NoIntent to the interaction model.
     */
    addYesAndNoIntents(): ControlInteractionModelGenerator;
    /**
     * Adds the information from a ControlIntent to the interaction model.
     *
     * @param controlIntent - ControlIntent that extends `BaseControlIntent`
     * @param controlIMData - Localization data for built-ins.
     */
    addControlIntent(controlIntent: BaseControlIntent, controlIMData: ModelData): this;
}
/**
 * Generate the modelData Object by reading the i18n instance.
 *
 * This is the consolidated localization information for the built-ins.  This
 * data is not included in the generated interaction model unless the components
 * are actually used. I.e. this is a map of data from which to extract bits
 * and pieces as needed.
 */
export declare function generateModelData(): ModelData;
//# sourceMappingURL=ControlInteractionModelGenerator.d.ts.map