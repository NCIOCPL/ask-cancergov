import { Skill, RequestHandler } from 'ask-sdk-core';
import { Directive, Response, ResponseEnvelope } from 'ask-sdk-model';
import { IControlInput } from '../../controls/interfaces/IControlInput';
/**
 * Utility to invoke a Skill or RequestHandler for testing.
 *
 * This wrapper mimics the lifecycle of an ASK Skill using AWS Lambda
 * that is repeatedly invoked as a 'stateless' function which receives actual state
 * in the session attributes of the Request object.
 *
 */
export declare class SkillInvoker {
    private sessionAttributes;
    private skill;
    constructor(skillOrRequestHandler: Skill | RequestHandler);
    /**
     * Invoke the skill with a control-input object.
     * The control input is first converted to a RequestEnvelope(IntentRequest)
     *
     * @param input - Input
     * @returns [prompt ssml inner-text, reprompt ssml inner-text]
     */
    invoke(input: IControlInput): Promise<TestResponseObject>;
}
export interface TestResponseObject {
    responseEnvelope: ResponseEnvelope;
    response: Response;
    prompt: string;
    reprompt?: string;
    directive?: Directive[];
}
//# sourceMappingURL=SkillInvoker.d.ts.map