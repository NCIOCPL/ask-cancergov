"use strict";
/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BasicSlotTypesFactoryDe = void 0;
class BasicSlotTypesFactoryDe {
    static init() {
        const resultArray = [];
        for (const slotType of Object.values(this.defaultDefinitions)) {
            resultArray.push(slotType);
        }
        return resultArray;
    }
}
exports.BasicSlotTypesFactoryDe = BasicSlotTypesFactoryDe;
BasicSlotTypesFactoryDe.defaultDefinitions = {
    feedback: {
        name: 'feedback',
        values: [
            {
                id: 'affirm',
                name: {
                    value: 'bestätige',
                    synonyms: [
                        'ja'
                    ]
                }
            },
            {
                id: 'disaffirm',
                name: {
                    value: 'verweigern',
                    synonyms: [
                        'Nein'
                    ]
                }
            },
            {
                id: 'confused',
                name: {
                    value: 'was',
                    synonyms: [
                        "huh",
                        "er Was",
                        "Sag was"
                    ]
                }
            }
        ]
    },
    head: {
        name: 'head',
        values: [
            {
                id: 'head',
                name: {
                    value: 'head',
                    synonyms: [
                        "gefallen",
                        "freuen",
                        "dank",
                        "Hmm",
                        "Um",
                        "Umm",
                        "Uh",
                        "Ugh",
                        "Er",
                        "Err"
                    ]
                }
            }
        ]
    },
    tail: {
        name: 'tail',
        values: [
            {
                id: 'tail',
                name: {
                    value: 'tail',
                    synonyms: [
                        "gefallen",
                        "freuen",
                        "dank",
                        "Hmm",
                        "Um",
                        "Umm",
                        "Uh",
                        "Ugh",
                        "Er",
                        "Err"
                    ]
                }
            }
        ]
    },
    conjunction: {
        name: 'conjunction',
        values: [
            {
                id: 'Verbindung',
                name: {
                    value: 'Verbindung',
                    synonyms: [
                        "und",
                        "und dann",
                        "dann",
                        "and auch"
                    ]
                }
            }
        ]
    },
    preposition: {
        name: 'preposition',
        values: [
            {
                id: 'preposition',
                name: {
                    value: 'preposition',
                    synonyms: [
                        "zu",
                        "sein",
                    ]
                }
            }
        ]
    },
    action: {
        name: 'action',
        values: [
            {
                id: 'setzen',
                name: {
                    value: 'setzen',
                    synonyms: [
                        "set",
                        "einstellen",
                        "festlegen",
                        "stellen",
                        "legen",
                    ]
                }
            },
            {
                id: 'wechseln',
                name: {
                    value: 'wechseln',
                    synonyms: [
                        "wechseln",
                        "ändern",
                        "verändern",
                        "umsteigen",
                    ]
                }
            },
            {
                id: 'wählen',
                name: {
                    value: 'wählen',
                    synonyms: [
                        "auswählen",
                        "selektieren",
                        "select",
                    ]
                }
            },
        ]
    },
    target: {
        name: 'target',
        values: [
            {
                id: 'es',
                name: {
                    value: 'es',
                    synonyms: [
                        "dies",
                        "das"
                    ]
                }
            },
        ]
    },
};
//# sourceMappingURL=data:application/json;base64,