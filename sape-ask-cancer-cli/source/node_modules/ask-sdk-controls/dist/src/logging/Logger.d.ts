/**
 * Logger
 *
 * This wraps the Debug object from npm 'Debug' package to provide "log-levels".
 * The log-levels are handled as top-level namespaces.
 *
 * Examples
 * ```
 * export DEBUG="error:*" -> Log 'error' messages from every module
 * export DEBUG="error:moduleA" -> Log 'error' messages for moduleA only
 * export DEBUG="error:*, warn:*, info:*, debug:*" -> Log everything
 * ```
 *
 * See https://www.npmjs.com/package/debug for more information on
 * configuration.
 *
 * When instantiated for a given "moduleName", this object provides an `error()`
 * function that logs with amended name "error:moduleName". Likewise for `warn()`,
 * `info()`, and `debug()`.
 */
export declare class Logger {
    moduleName: string;
    constructor(moduleName: string);
    /**
     * Log a message as an "error".
     * @param message - Message
     */
    error(message: string): void;
    /**
     * Log a message as an "warning".
     * @param message - Message
     */
    warn(message: string): void;
    /**
     * Log a message as an "informational" message.
     * @param message - Message
     */
    info(message: string): void;
    /**
     * Log a message as an "low-level debug message".
     * @param message - Message
     */
    debug(message: string): void;
}
//# sourceMappingURL=Logger.d.ts.map