import { Intent } from "ask-sdk-model";
import { v1 } from 'ask-smapi-model';
import { BaseControlIntent } from './BaseControlIntent';
/**
 * Slot values conveyed by a DateRangeControlIntent
 */
export interface DateRangeControlIntentSlots {
    feedback?: string;
    action?: string;
    target?: string;
    'AMAZON.DATE'?: string;
    'action.a'?: string;
    'target.a'?: string;
    'AMAZON.DATE.a'?: string;
    'action.b'?: string;
    'target.b'?: string;
    'AMAZON.DATE.b'?: string;
}
/**
 * Unpacks the complete intent object into a simpler representation.
 *
 * Note re "empty slots":
 * - Slots in the intent with no value appear in the intent object as "".
 *   However, these are unpacked as **`undefined`** to be more explicit and ease
 *   the implementation of predicates.
 * @param intent - Intent
 */
export declare function unpackDateRangeControlIntent(intent: Intent): DateRangeControlIntentSlots;
export declare function hasOneOrMoreTargets(input: DateRangeControlIntentSlots | null): boolean;
export declare function hasOneOrMoreActions(input: DateRangeControlIntentSlots | null): boolean;
export declare function hasOneOrMoreValues(input: DateRangeControlIntentSlots | null): boolean;
export declare function validateControlInput(input: DateRangeControlIntentSlots | null): boolean;
/**
 * Intent that conveys feedback, action, target and two AMAZON.DATE values.
 */
export declare class DateRangeControlIntent extends BaseControlIntent {
    /**
     * Create Intent from specification of the slots
     */
    static of(slots: DateRangeControlIntentSlots): Intent;
    generateIntent(): v1.skill.interactionModel.Intent;
    private generateSlots;
}
//# sourceMappingURL=DateRangeControlIntent.d.ts.map