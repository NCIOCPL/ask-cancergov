import * as React from 'react';
import { LiteralUnion } from '../../../common';
declare type DisplayEnum = 'invisible' | 'none' | 'normal';
declare type Entity = {
    id: string;
    type: string;
    name: string;
    nameSynonyms?: string[] | string;
    targetSlotName?: string;
};
declare type tickHandler = {
    commands: Command[] | string;
    description?: string;
    minimumDelay?: number | string;
    when?: boolean | string;
};
declare type KeyHandler = {
    commands?: Command[] | string;
    propagate?: boolean | string;
    when?: boolean | string;
};
declare type typeEnum = 'any' | 'string' | 'number' | 'integer' | 'style' | 'color' | 'boolean' | 'dimension' | 'component' | 'componentArray';
declare type Binding = {
    name: string;
    value: string;
    type?: LiteralUnion<typeEnum, string>;
};
declare type dimension = string | number;
declare type Command = {
    type: string;
    description?: string;
    delay?: number | string;
    screenLock?: boolean | string;
    sequencer?: string;
    when?: boolean | string;
    [key: string]: any;
};
declare type Transform = {
    rotate?: number | string;
    scale?: number | string;
    scaleX?: number | string;
    scaleY?: number | string;
    skewX?: number | string;
    skewY?: number | string;
    translateX?: dimension;
    translateY?: dimension;
};
export interface ScrollViewProps {
    description?: string;
    checked?: boolean | string;
    disabled?: boolean | string;
    display?: LiteralUnion<DisplayEnum, string>;
    handleTick?: tickHandler[] | string;
    onMount?: Command[] | string;
    transform?: Transform[] | string;
    when?: boolean | string;
    speech?: string;
    entity?: Entity[] | string;
    id?: string;
    bind?: Binding[] | string;
    style?: string;
    width?: dimension;
    minWidth?: dimension;
    maxWidth?: dimension;
    height?: dimension;
    inheritParentState?: boolean | string;
    minHeight?: dimension;
    maxHeight?: dimension;
    opacity?: number | string;
    paddingLeft?: dimension;
    paddingTop?: dimension;
    paddingRight?: dimension;
    paddingBottom?: dimension;
    accessibilityLabel?: string;
    onScroll?: Command[] | string;
    shadowColor?: string;
    shadowHorizontalOffset?: dimension;
    shadowRadius?: dimension;
    shadowVerticalOffset?: dimension;
    onFocus?: Command[] | string;
    onBlur?: Command[] | string;
    handleKeyDown?: KeyHandler[] | string;
    handleKeyUp?: KeyHandler[] | string;
    item?: any;
    items?: any;
    [key: string]: unknown;
}
export declare const ScrollView: (props: React.PropsWithChildren<ScrollViewProps>) => JSX.Element;
export {};
